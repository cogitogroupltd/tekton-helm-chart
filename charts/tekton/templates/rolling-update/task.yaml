apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: rolling-update
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/categories: Kubernetes
    tekton.dev/tags: CLI, kubectl
    tekton.dev/displayName: "kubernetes actions"
    tekton.dev/platforms: "linux/amd64"
spec:
  workspaces:
    - name: kubeconfig-dir
      optional: true
  params:
    - name: deployment
      type: string
    - name: namespace
      type: string
      default: "default"
    - name: git_repository_name
      type: string
      default: "defaultgitrepositoryname"
    - name: docker_registry
      type: string
      default: "defaultdockerregistry"
    - name: docker_repository
      type: string
      default: "defaultdockerrepo"
    - name: tag
      type: string
      default: "master"
  steps:
    - name: rolling-update
      image: cogitoexample/cicd-agent:0.02
      script: |
        set -xe
        kubectl get deployment $(params.deployment) --namespace $(params.namespace) | grep -iq "$(params.deployment)" || kubectl create deployment $(params.deployment) --namespace $(params.namespace) --image="$(params.docker_registry)/$(params.docker_repository):$(params.tag)"
        # The set image command has this syntax `kubectl set image deploy/$DEPLOYMENT_NAME $CONTAINER_NAME=cogitoexample/docker-nginx-hello-world --namespace default`
        kubectl set image deploy/$(params.deployment) "$(params.docker_repository)=$(params.docker_registry)/$(params.docker_repository):$(params.tag)" --namespace $(params.namespace)
        kubectl rollout restart deployment/$(params.deployment) --namespace $(params.namespace)
        kubectl rollout status deployment/$(params.deployment) --namespace $(params.namespace)