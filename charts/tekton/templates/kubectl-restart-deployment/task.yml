apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: kubectl-restart-deployment
  namespace: {{ $.Release.Namespace }}
  labels:
    app.kubernetes.io/version: "0.2"
  annotations:
    tekton.dev/pipelines.minVersion: "0.17.0"
    tekton.dev/categories: Kubernetes
    tekton.dev/tags: CLI, kubectl
    tekton.dev/displayName: "kubernetes actions"
    tekton.dev/platforms: "linux/amd64"
spec:
  workspaces:
    - name: kubeconfig-dir
      optional: true
  params:
    - name: deployment
      type: string
    - name: namespace
      type: string
      default: "default"
    - name: git_repository_name
      type: string
      default: "defaultgitrepositoryname"
    - name: docker_registry
      type: string
      default: "defaultdockerregistry"
    - name: tag
      type: string
      default: "master"
    - name: arch
      type: string
      default: "arm64"
  steps:
    - name: get-kubectl-and-run-command
      image: docker.io/amazon/aws-cli:2.0.52@sha256:1506cec98a7101c935176d440a14302ea528b8f92fcaf4a6f1ea2d7ecef7edc4 #tag: 2.0.52 #image is huge
      script: |
        set -xe
        cd /tmp
        rm -f /usr/local/bin/kubectl
        curl -LO "https://dl.k8s.io/release/v1.23.6/bin/linux/arm64/kubectl"
        chmod +x ./kubectl
        mv ./kubectl /usr/local/bin/kubectl
        chown root: /usr/local/bin/kubectl
        kubectl version
        kubectl set image deploy/$(params.deployment) "$(params.deployment)-service=$(params.docker_registry):$(params.tag)"
        kubectl rollout restart deployment/$(params.deployment) --namespace $(params.namespace)
        kubectl rollout status deployment/$(params.deployment) --namespace $(params.namespace)