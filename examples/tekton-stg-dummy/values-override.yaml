secret_ssh_key:
secret_ssh_cred: ssh-key
secret_docker_conf: docker-config
docker_config_json: 
configmap_kube_conf: kube-config
secret_slack_webhook_uri: 

pipelines:
  - name: prod 
    trigger:
      eventType: pull_request
      eventAction: "['opened','synchronize','reopened']"
    custom:
      enabled: true
      serviceAccounts:
      - name: kubectl-get-pods
        yaml: |-
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            name: kubectl-get-pods
          ---
          apiVersion: rbac.authorization.k8s.io/v1
          kind: ClusterRoleBinding
          metadata:
            name: "cluster-administrator-kubectl-get-pods"
          subjects:
            - kind: ServiceAccount
              name: "kubectl-get-pods"
              namespace: default
          roleRef:
            kind: ClusterRole
            name: cluster-admin
            apiGroup: rbac.authorization.k8s.io

      tasks:
      - name: kubectl-get-pods
        clusterAdmin: false
        description: >-
          This task does a kubectl get pods 
          This task uses Incoming Webhooks of slack to send the message.
        podTemplate:
          nodeSelector:
            kubernetes.io/arch: arm64
        params:
        - name: deployment
          type: string
          value: "defaultdeploy"
        - name: tag
          type: string
          default: "master"
          value: "defaulttag"
        - name: arch
          type: string
          default: "arm64"
          value: "defaultarch"
        steps:
        - name: run-kubectl-get
          image: docker.io/amazon/aws-cli:2.0.52@sha256:1506cec98a7101c935176d440a14302ea528b8f92fcaf4a6f1ea2d7ecef7edc4 #tag: 2.0.52 #image is huge
          script: |
            set -xe
            cd /tmp
            rm -f /usr/local/bin/kubectl
            curl -LO "https://dl.k8s.io/release/v1.23.6/bin/linux/arm64/kubectl"
            chmod +x ./kubectl
            mv ./kubectl /usr/local/bin/kubectl
            chown root: /usr/local/bin/kubectl
            kubectl get pods
  - name: dev
    trigger:
      git_revision: master
      eventType: push
    tasks:
      clone:
        name: clone-git-repo
        params:
        - name: url
          value: git@github.com:dockerised/docker-anyconnect-vpn.git
        - name: revision #revision/commit
          value: $(params.git_revision)
        workspaces:
        - name: ssh-directory
          workspace: ssh-creds
        - name: output
          workspace: git-pvc
        runAfter:
        - started-webhook
      build:  
        name: build-and-push
        params:
          - name: DOCKER_REGISTRY
            value: george7522
          - name: DOCKER_REPOSITORY
            value: docker-anyconnect-vpn
          - name: DOCKER_IMAGE_TAG
            value: $(params.git_revision)
        runAfter:
          - clone-git-repo
        workspaces:
        - name: source
          workspace: git-pvc
        - name: dockerconfig
          workspace: docker-creds-cm
      deploy:  
        name: update-image
        params:
          - name: deployment
            value: nginx-app
          - name: namespace
            value: default
          - name: tag
            value: $(params.git_revision)
          - name: git_repository_name
            value: $(params.git_repository_name)
          - name: docker_registry
            value: george7522
          - name: docker_repository
            value: docker-anyconnect-vpn
        runAfter:
          - build-and-push
        workspaces:
          - name: kubeconfig-dir
            workspace: kubeconfig
    custom:
      enabled: true
      serviceAccounts:
      - name: kubectl-get-podss
        yaml: |-
          apiVersion: v1
          kind: ServiceAccount
          metadata:
            annotations:
              eks.amazonaws.com/role-arn: "arn:aws:iam::12345:role/production-task-execution-role"
            name: kubectl-get-podss
      tasks:
      - name: kubectl-get-podss
        clusterAdmin: false
        description: >-
          This task does a kubectl get pods 
          This task uses Incoming Webhooks of slack to send the message.
        podTemplate:
          nodeSelector:
            kubernetes.io/arch: amd64
        volumes:
        - name: sec
          secret:
            secretName: hello
        params:
        - name: deployment
          type: string
          value: "defaultdeploy"
        - name: tag
          type: string
          default: "master"
          value: "defaulttag"
        - name: arch
          type: string
          default: "arm64"
          value: "defaultarch"
        steps:
        - name: run-kubectl-get
          image: docker.io/amazon/aws-cli:2.0.52@sha256:1506cec98a7101c935176d440a14302ea528b8f92fcaf4a6f1ea2d7ecef7edc4 #tag: 2.0.52 #image is huge
          volumeMounts:
          - name: sec
            mountPath: /mnt/sec
          script: |
            echo "secret=$SECRET"
            cat /mnt/sec/secret
            set -xe
            cd /tmp
            rm -f /usr/local/bin/kubectl
            curl -LO "https://dl.k8s.io/release/v1.23.6/bin/linux/arm64/kubectl"
            chmod +x ./kubectl
            mv ./kubectl /usr/local/bin/kubectl
            chown root: /usr/local/bin/kubectl
            kubectl get pods
    
