name: Publish Helm Chart

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v2

    # Step 2: Generate semantic version and update Chart.yaml
    - name: Generate version and update Chart.yaml
      run: |
        BASE_VERSION="0.5.2"
        SHORT_SHA=$(git rev-parse --short HEAD)
        NEW_VERSION="${BASE_VERSION}+${SHORT_SHA}"
        echo "New chart version: $NEW_VERSION"
        
        CHART_YAML_PATH="./charts/tekton/Chart.yaml"
        sed -i "s/^version:.*/version: $NEW_VERSION/" "$CHART_YAML_PATH"

    # Step 3: Set up Helm
    - name: Set up Helm CLI
      uses: azure/setup-helm@v1
      with:
        version: v3.8.0

    # Step 4: Package the Helm chart
    - name: Package Helm chart
      run: |
        CHART_DIR="./charts/tekton"
        helm package $CHART_DIR --destination $CHART_DIR

    # Step 5: Generate the SHA256 digest for the new .tgz file
    - name: Generate SHA256 digest for .tgz file
      run: |
        CHART_DIR="./charts/tekton"
        TGZ_FILE="$CHART_DIR/pipeline-${NEW_VERSION}.tgz"
        SHA256=$(shasum -a 256 "$TGZ_FILE" | awk '{print $1}')
        echo "Digest for $TGZ_FILE: $SHA256"

    # Step 6: Commit and push to gh-pages branch
    - name: Push to gh-pages
      run: |
        GH_PAGES_BRANCH="gh-pages"
        git fetch origin $GH_PAGES_BRANCH
        git checkout $GH_PAGES_BRANCH
        mv "$TGZ_FILE" .
        if [ -f index.yaml ]; then
          helm repo index . --url https://<username>.github.io/<repo> --merge index.yaml
        else
          helm repo index . --url https://<username>.github.io/<repo>
        fi
        git add pipeline-${NEW_VERSION}.tgz index.yaml
        git commit -m "Release Helm chart version $NEW_VERSION"
        git tag -a "v${NEW_VERSION}" -m "Release v${NEW_VERSION}"
        git push origin $GH_PAGES_BRANCH --tags

    # Step 7: Create a GitHub Release from the Tag
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: "v${NEW_VERSION}"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Step 8: Verify published version via Helm CLI
  verify:
    runs-on: ubuntu-latest
    needs: release

    steps:
    # Step 8.1: Set up Helm CLI
    - name: Set up Helm CLI
      uses: azure/setup-helm@v1
      with:
        version: v3.8.0

    # Step 8.2: Add Helm repo and update
    - name: Add Helm repo
      run: |
        helm repo add tekton-charts https://<username>.github.io/<repo>
        helm repo update

    # Step 8.3: Search Helm chart and verify version
    - name: Search Helm chart and verify version
      run: |
        helm search repo tekton-charts/pipeline
        helm show chart tekton-charts/pipeline --version ${{ steps.release.outputs.new_version }}
